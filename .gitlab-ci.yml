image: docker:latest

variables:
  DOCKER_DRIVER: overlay
#  GIT_DEPTH: 1
  BRANCH: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  COMMIT: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  NIGHTLY: $CI_REGISTRY_IMAGE:nightly
  TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  LAL_DIR: $CI_PROJECT_DIR/opt/lalsuite

stages:
  - level0
  - level1
  - level2
  - level3
  - level4
  - release
  - nightly
  - deploy

before_script:
  - ulimit -S -c 0
  - export VERBOSE="true"
  - export PATH=/usr/lib/ccache:/opt/local/libexec/ccache:$PATH
  - export CCACHE_DIR=${PWD}/ccache
  - export PKG_CONFIG_PATH=${LAL_DIR}/lib/pkgconfig
  - mkdir -p opt/lalsuite

cache:
  key: $CI_JOB_NAME
  paths:
    - ccache

.levelN:package: &levelN-package
  image: ligo/lalsuite-dev:jessie
  script:
    - cd ${CI_JOB_NAME#level?:}
    - ./00boot
    - ./configure --enable-swig --enable-doxygen --enable-mpi --prefix=${LAL_DIR}
    - make dist
    - tar xf *.tar.xz
    - cd lal*-*
    - mkdir -p subdir
    - cd subdir
    - ../configure --enable-swig --enable-doxygen --enable-mpi --prefix=${LAL_DIR}
    - make -j4 V=1
    - make -j4 V=1 VERBOSE=1 check
    - make -j4 install
    - make -j4 install-html
  artifacts:
    expire_in: 3h
    paths:
      - opt/lalsuite
  only:
    - pushes
    - schedules
    - web

level0:lal:
  <<: *levelN-package
  stage: level0

level1:lalframe:
  <<: *levelN-package
  stage: level1
  dependencies:
    - level0:lal

level1:lalmetaio:
  <<: *levelN-package
  stage: level1
  dependencies:
    - level0:lal

level1:lalsimulation:
  <<: *levelN-package
  stage: level1
  dependencies:
    - level0:lal

level1:lalxml:
  <<: *levelN-package
  stage: level1
  dependencies:
    - level0:lal

level2:lalburst:
  <<: *levelN-package
  stage: level2
  dependencies:
    - level1:lalmetaio
    - level1:lalsimulation

level2:lalinspiral:
  <<: *levelN-package
  stage: level2
  dependencies:
    - level1:lalframe
    - level1:lalmetaio
    - level1:lalsimulation

level2:lalpulsar:
  <<: *levelN-package
  stage: level2
  dependencies:
    - level0:lal

level2:lalstochastic:
  <<: *levelN-package
  stage: level2
  dependencies:
    - level1:lalmetaio

level3:laldetchar:
  <<: *levelN-package
  stage: level3
  dependencies:
    - level2:lalburst

level3:lalinference:
  <<: *levelN-package
  stage: level3
  dependencies:
    - level2:lalburst
    - level2:lalinspiral
    - level2:lalpulsar

level4:lalapps:
  <<: *levelN-package
  stage: level4
  dependencies:
    - level2:lalstochastic
    - level3:laldetchar
    - level3:lalinference

# release a debian docker image upon every tag in lalsuite
docker:tags:
  stage: release
  before_script: []
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build --pull -t $TAG --file .Dockerfile.gitlab-ci .
    - docker push $TAG
  dependencies:
    - level4:lalapps
  only:
    - tags

# release a debian docker image of each nightly build
docker:nightly:
  stage: nightly
  before_script: []
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build --pull -t $NIGHTLY --file .Dockerfile.gitlab-ci .
    - docker push $NIGHTLY
  dependencies:
    - level4:lalapps
  only:
    - master@lscsoft/lalsuite
    - schedules
  except:
    - pushes
    - web

nightly:top-level:el7:
  image: ligo/lalsuite-dev:el7
  stage: nightly
  script:
    - ./00boot
    - ./configure --enable-swig --enable-doxygen
    - make -j4 distcheck
  only:
    - schedules
    - web

# do not perform a jessie build because we are doing one nightly via
# the normal CI parellel build process

nightly:top-level:stretch:
  image: ligo/lalsuite-dev:stretch
  stage: nightly
  script:
    - ./00boot
    - ./configure --enable-swig --enable-doxygen
    - make -j4 distcheck
  dependencies: []
  only:
    - schedules
    - web

nightly:top-level:trusty:
  image: skymoo/ligo-lalsuite-dev:trusty
  stage: nightly
  script:
    - ./00boot
    - ./configure --disable-swig --enable-doxygen
    - make -j4 distcheck
  dependencies: []
  only:
    - schedules
    - web

nightly:top-level:xenial:
  image: skymoo/ligo-lalsuite-dev:xenial
  stage: nightly
  script:
    - ./00boot
    - ./configure --disable-swig --enable-doxygen
    - make -j4 distcheck
  dependencies: []
  only:
    - schedules
    - web

nightly:top-level:artful:
  image: skymoo/ligo-lalsuite-dev:artful
  stage: nightly
  script:
    - ./00boot
    - ./configure --enable-doxygen
    - make -j4 distcheck
  dependencies: []
  only:
    - schedules
    - web

nightly:top-level:bionic:
  image: skymoo/ligo-lalsuite-dev:bionic
  stage: nightly
  script:
    - ./00boot
    - ./configure --enable-doxygen
    - make -j4 distcheck
  dependencies: []
  only:
    - schedules
    - web

# FIXME: It seems that Octave on buster currently has a few bugs which
# cause the Octave bindings to fail, disable building the Octave SWIG
# bindings for the time being.
nightly:top-level:buster:
  image: skymoo/ligo-lalsuite-dev:buster
  stage: nightly
  dependencies: []
  script:
    - ./00boot
    - ./configure --enable-doxygen
    - make -j4 distcheck
  only:
    - schedules
    - web

nightly:top-level:clang:
  image: skymoo/ligo-lalsuite-clang:jessie
  stage: nightly
  script:
    - ./00boot
    - CC=clang CXX=clang++ ./configure --enable-swig --enable-doxygen
    - make -j4 distcheck
  dependencies: []
  only:
    - schedules
    - web

nightly:openmp:jessie:
  image: ligo/lalsuite-dev:jessie
  stage: nightly
  dependencies: []
  script:
    - ./00boot
    - ./configure --enable-swig --enable-doxygen --enable-openmp
    - make -j4 distcheck
  only:
    - schedules
    - web

nightly:python3:stretch:
  image: ligo/lalsuite-dev:stretch
  stage: nightly
  script:
    - ./00boot
    - PYTHON=python3 ./configure --enable-swig --enable-doxygen
    - make -j4 distcheck
  dependencies: []
  only:
    - schedules
    - web
  # FIXME: there is currently an intermittant LALBurst test failure when
  # building with python3, temporarily allow this to fail
  allow_failure: true

nightly:macos:highsierra:
  tags:
    - macos_highsierra
  stage: nightly
  script:
    - ./00boot
    - PYTHON=/opt/local/bin/python2.7 ./configure --enable-swig --enable-doxygen
    - make -j4
    - make -j4 check
  dependencies: []
  only:
    - schedules
    - web

# Build receipe for standalone wheels on Linux
.nightly:wheel:manylinux1: &nightly-wheel-manylinux1
  # This container is derived from the official manylinux image provided by
  # python.org (see PEP 513), and includes all of the LALSuite
  # build-dependencies.
  image: containers.ligo.org/lscsoft/lalsuite-manylinux:master
  stage: nightly
  script:
    - PYPREFIX=/opt/python/$(echo ${CI_JOB_NAME} | sed 's/.*:\(.*\)-manylinux1/\1/')
    # Build wheel
    - ./00boot
    # FIXME: laldetchar depends on glib >= 2.14, too new for manylinux1
    - ./configure PYTHON=${PYPREFIX}/bin/python
      --enable-swig-python --enable-nightly
      --disable-laldetchar
    - make -j4 wheel
    # Bundle and fix up dependent shared libraries
    - auditwheel repair wheel/*.whl
    # Test
    - ${PYPREFIX}/bin/virtualenv test
    - source test/bin/activate
    - pip install -q wheelhouse/*
    - python -c 'import lal, lalframe, lalmetaio'
  dependencies: []
  only:
    - /^lalsuite-.+/
    - schedules
  artifacts:
    expire_in: 3h
    paths:
      - wheelhouse

# Build receipe for standalone wheels on macOS
.nightly:wheel:macos: &nightly-wheel-macos
  tags:
    - macos
  stage: nightly
  script:
    - PYVERS=$(echo ${CI_JOB_NAME} | sed 's/.*:cp\(.\)\(.\).*/\1.\2/')
    # Enter virtualenv so that we have a controlled version of Numpy
    - virtualenv-${PYVERS} env
    - source env/bin/activate
    - pip install -q git+https://github.com/lpsinger/delocate@fix-duplicate-libs glob2 numpy==1.7.0
    # Build wheel
    - ./00boot
    - ./configure PYTHON=$(which python${PYVERS})
      --enable-swig-python --enable-nightly
    - make -j4 wheel
    # Bundle and fix up dependent shared libraries
    - delocate-wheel -v -w wheelhouse wheel/*.whl
    # Test
    - virtualenv-${PYVERS} test
    - source test/bin/activate
    - pip install -q wheelhouse/*
    - python -c 'import lal, lalframe, lalmetaio'
  dependencies: []
  only:
    - /^lalsuite-.+/
    - schedules
  artifacts:
    expire_in: 3h
    paths:
      - wheelhouse

# Build wheels for all supported platforms
nightly:wheel:cp27-cp27m-manylinux1:
  <<: *nightly-wheel-manylinux1
nightly:wheel:cp27-cp27mu-manylinux1:
  <<: *nightly-wheel-manylinux1
nightly:wheel:cp34-cp34m-manylinux1:
  <<: *nightly-wheel-manylinux1
nightly:wheel:cp35-cp35m-manylinux1:
  <<: *nightly-wheel-manylinux1
nightly:wheel:cp36-cp36m-manylinux1:
  <<: *nightly-wheel-manylinux1
.nightly:wheel:cp27-cp27m-macosx:
  <<: *nightly-wheel-macos
.nightly:wheel:cp35-cp35m-macosx:
  <<: *nightly-wheel-macos
.nightly:wheel:cp36-cp36m-macosx:
  <<: *nightly-wheel-macos

.levelN:rpm: &levelN-rpm-package
  image: ligo/lalsuite-dev:el7
  variables:
    RPM_BUILD_CPUS: 4
  script:
    - rpm -ivh rpmbuild/RPMS/x86_64/lal*.rpm || true
    - cd ${CI_JOB_NAME#level?:rpm:}
    - ./00boot
    - ./configure --enable-swig --enable-nightly
    - make dist
    - rpmbuild -tb --define "_topdir $CI_PROJECT_DIR/rpmbuild" ${CI_JOB_NAME#level?:rpm:}-*.tar.xz
  artifacts:
    expire_in: 3h
    paths:
      - rpmbuild/RPMS/x86_64/${CI_JOB_NAME#level?:rpm:}-*.rpm
  only:
    - schedules
    - web

level0:rpm:lal:
  <<: *levelN-rpm-package
  stage: level0

level1:rpm:lalframe:
  <<: *levelN-rpm-package
  stage: level1
  dependencies:
    - level0:rpm:lal

level1:rpm:lalmetaio:
  <<: *levelN-rpm-package
  stage: level1
  dependencies:
    - level0:rpm:lal

level1:rpm:lalsimulation:
  <<: *levelN-rpm-package
  stage: level1
  dependencies:
    - level0:rpm:lal

level1:rpm:lalxml:
  <<: *levelN-rpm-package
  stage: level1
  dependencies:
    - level0:rpm:lal

level2:rpm:lalburst:
  <<: *levelN-rpm-package
  stage: level2
  dependencies:
    - level0:rpm:lal
    - level1:rpm:lalmetaio
    - level1:rpm:lalsimulation

level2:rpm:lalinspiral:
  <<: *levelN-rpm-package
  stage: level2
  dependencies:
    - level0:rpm:lal
    - level1:rpm:lalframe
    - level1:rpm:lalmetaio
    - level1:rpm:lalsimulation

level2:rpm:lalpulsar:
  <<: *levelN-rpm-package
  stage: level2
  dependencies:
    - level0:rpm:lal

level2:rpm:lalstochastic:
  <<: *levelN-rpm-package
  stage: level2
  dependencies:
   - level0:rpm:lal
   - level1:rpm:lalmetaio

level3:rpm:laldetchar:
  <<: *levelN-rpm-package
  stage: level3
  dependencies:
    - level0:rpm:lal
    - level1:rpm:lalmetaio
    - level1:rpm:lalsimulation
    - level2:rpm:lalburst

level3:rpm:lalinference:
  <<: *levelN-rpm-package
  stage: level3
  dependencies:
    - level0:rpm:lal
    - level1:rpm:lalframe
    - level1:rpm:lalmetaio
    - level1:rpm:lalsimulation
    - level2:rpm:lalburst
    - level2:rpm:lalinspiral
    - level2:rpm:lalpulsar

level4:rpm:lalapps:
  <<: *levelN-rpm-package
  stage: level4
  dependencies:
    - level0:rpm:lal
    - level1:rpm:lalframe
    - level1:rpm:lalmetaio
    - level1:rpm:lalsimulation
    - level2:rpm:lalburst
    - level2:rpm:lalinspiral
    - level2:rpm:lalpulsar
    - level2:rpm:lalstochastic
    - level3:rpm:lalinference

pages:
  image: ligo/lalsuite-dev:stretch
  stage: nightly
  script:
    - ./00boot
    - ./configure --enable-doxygen --prefix=${LAL_DIR}
    - make -j4 install-html
    - cp -r ${LAL_DIR}/share/doc public/
    - pushd public
    - cp lalsuite/index.html index.html
    - sed -i 's/..\/lal/lal/g' index.html
    - popd
  dependencies: []
  artifacts:
    paths:
      - public
  only:
    - master@lscsoft/lalsuite
  except:
    - pushes
    - web

deploy:wheel:
  stage: deploy
  image: containers.ligo.org/lscsoft/lalsuite-manylinux:master
  variables:
    GIT_STRATEGY: none
  script:
    # TWINE_USERNAME and TWINE_PASSWORD are provided by CI secret variables
    - /opt/python/cp36-cp36m/bin/pip install twine
    - /opt/python/cp36-cp36m/bin/twine upload wheelhouse/*
  dependencies:
    - nightly:wheel:cp27-cp27m-manylinux1
    - nightly:wheel:cp27-cp27mu-manylinux1
    - nightly:wheel:cp34-cp34m-manylinux1
    - nightly:wheel:cp35-cp35m-manylinux1
    - nightly:wheel:cp36-cp36m-manylinux1
#    - nightly:wheel:cp27-cp27m-macosx
#    - nightly:wheel:cp35-cp35m-macosx
#    - nightly:wheel:cp36-cp36m-macosx
  only:
    - master@lscsoft/lalsuite
  except:
    - pushes
    - web
